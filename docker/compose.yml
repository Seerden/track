services:
   store:
      image: redis
      command: ["redis-server", "--appendonly", "yes"]
      volumes:
         - ./redis-data:/data

   database:
      image: postgres:14-alpine
      environment:
         - POSTGRES_PASSWORD=$PG_PASS
         - POSTGRES_USER=$PG_USER
         - POSTGRES_DB=$PG_DB
      volumes:
         - ./pg-data:/var/lib/postgresql/data
         - ./database-setup:/docker-entrypoint-initdb.d
         - ./database-backup:/psql-backups
      ports:
         - "5432:5432"
      command: ["postgres", "-c", "log_statement=all"]

   server:
      build:
         context: ../server
         dockerfile: Dockerfile
      volumes:
         - ../:/track
         - ../server:/track/server
         - node_modules_server:/track/server/node_modules
      depends_on:
         - database
         - store
      ports:
         - "5000:5000"

   test-database:
      image: postgres:14-alpine
      environment:
         - POSTGRES_PASSWORD=$PG_PASS
         - POSTGRES_USER=$PG_USER
         - POSTGRES_DB=$PG_TEST_DB
      volumes:
         - ./pg-data-test:/var/lib/postgresql/data
         - ./database-setup:/docker-entrypoint-initdb.d
         - ./test-database-backup:/psql-backups
      expose:
         - "5434"
      ports:
         - "5434:5434"
      command: ["postgres", "-p 5434", "-c", "log_statement=all"]
volumes:
   node_modules_server:
      driver: local
      driver_opts:
         type: none
         o: bind
         device: ../server/node_modules